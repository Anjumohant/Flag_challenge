// Generated by view binder compiler. Do not edit!
package com.example.flags_challenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flags_challenge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTimePickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView headerText;

  @NonNull
  public final NumberPicker hourPicker;

  @NonNull
  public final NumberPicker minutePicker;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final NumberPicker secondPicker;

  private ActivityTimePickerBinding(@NonNull LinearLayout rootView, @NonNull TextView headerText,
      @NonNull NumberPicker hourPicker, @NonNull NumberPicker minutePicker,
      @NonNull Button saveButton, @NonNull NumberPicker secondPicker) {
    this.rootView = rootView;
    this.headerText = headerText;
    this.hourPicker = hourPicker;
    this.minutePicker = minutePicker;
    this.saveButton = saveButton;
    this.secondPicker = secondPicker;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTimePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTimePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_time_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTimePickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.headerText;
      TextView headerText = ViewBindings.findChildViewById(rootView, id);
      if (headerText == null) {
        break missingId;
      }

      id = R.id.hourPicker;
      NumberPicker hourPicker = ViewBindings.findChildViewById(rootView, id);
      if (hourPicker == null) {
        break missingId;
      }

      id = R.id.minutePicker;
      NumberPicker minutePicker = ViewBindings.findChildViewById(rootView, id);
      if (minutePicker == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.secondPicker;
      NumberPicker secondPicker = ViewBindings.findChildViewById(rootView, id);
      if (secondPicker == null) {
        break missingId;
      }

      return new ActivityTimePickerBinding((LinearLayout) rootView, headerText, hourPicker,
          minutePicker, saveButton, secondPicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
